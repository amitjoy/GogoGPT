P: show all bundles
A: felix:lb

P: show all bundles that have xyz in their symbolic names
A: felix:lb xyz

P: show all bundles that have abc in their bsn
A: felix:lb abc

P: show all bundles that have mno in their bsn and list them by bundle symbolic names
A: felix:lb mno -s

P: show all bundles that have wxy in their bundle symbolic names and list them by bsn
A: felix:lb wxy -s

P: show all bundles that have anx in their bsn and list them by their update locations
A: felix:lb anx -u

P: show all bundles that have wuvx in their bundle symbolic names and list by update locations
A: felix:lb wuvx -u

P: show help for 'echo' command
A: felix:help echo

P: show help information for 'ls' command
A: felix:help ls

P: get help for 'lb' command
A: felix:help lb

P: Show all system properties
A: properties

P: list contents of a directory
A: felix:ls 'directory'

P: list 'xyz' directory
A: felix:ls 'xyz'

P: list content of 'ppx' directory
A: felix:ls 'ppx'

P: change directory
A: felix:cd 'directory'

P: change directory to efg
A: felix:cd efg

P: change directory to 'my directory'
A: felix:cd 'my directory'

P: determine from where a bundle loads a class
A: felix:which 'class'

P: install a bundle using its locations
A: felix:install 'file:/path_to_jar.jar'

P: uninstall bundle with id 10
A: felix:uninstall 10

P: uninstall bundles 13 38 62 77
A: felix:uninstall 13 38 62 77

P: uninstall bundles with ids 22, 34, 58, 84
A: felix:uninstall 22 34 58 84

P: refresh bundle with id 10
A: felix:refresh 10

P: resolve bundle with id 15
A: felix:resolve 15

P: resolve bundles with ids 19 40 32
A: felix:resolve 19 40 32

P: start bundle with id 20
A: felix:start 20

P: start bundle id 29
A: felix:start 29

P: start bundle id 58 transiently
A: felix:start 58 -t

P: start bundle ids 10 20 30 99 transiently
A: felix:start 10 20 30 99 -t

P: start bundles with ids 20 30 59 53
A: felix:start 20 30 59 53

P: stop bundle with id 25
A: felix:stop 25

P: stop bundle id 55
A: felix:stop 55

P: stop bundle id 91 tranisently
A: felix:stop 91 -t

P: stop bundles with ids 25 50 39 22
A: felix:stop 25 50 39 22

P: stop bundles ids 25 50 39 22
A: felix:stop 25 50 39 22

P: stop bundles ids 25 50 39 22 tranisently
A: felix:stop 25 50 39 22 -t

P: show bundle start level of bundle with id 30
A: felix:bundlelevel 30

P: set bundle start level to 11 of bundle with id 30
A: felix:bundlelevel 11 30

P: show start level of framework bundle
A: felix:frameworklevel

P: change framework start level to 20
A: felix:frameworklevel 20

P: list bundles matching a substring
A: felix:lb substring

P: list bundles that match mno
A: felix:lb mno

P: list bundles that contain xyz
A: felix:lb xyz

P: list bundle matching a substring and show locations
A: felix:lb -l substring

P: list bundles matching a substring and show symbolic names
A: felix:lb -s substring

P: list bundles that contain xyz and show symbolic names
A: felix:lb -s xyz

P: list bundles that have abc and show their symbolic names
A: felix:lb -s abc

P: list bundles matching a substring and show update location
A: felix:lb -u substring

P: show all capabilities of all bundles
A: felix:inspect cap *

P: show all capabilities of a bundle having id 1
A: felix:inspect cap * 1

P: show all packages capabilities of a bundle having id 1
A: felix:inspect cap package 1

P: show all package capabilities of all bundles
A: felix:inspect cap package

P: show all service capabilities of a bundle having id 1
A: felix:inspect cap service 1

P: show all service capabilities of all bundles
A: felix:inspect cap service

P: show all requirements of all bundles
A: felix:inspect req *

P: show all requirements of a bundle having id 1
A: felix:inspect req * 1

P: show all requirements of bundles having id 10, 45, 33
A: felix:inspect req * 10 45 33

P: show all package requirements of a bundle having id 1
A: felix:inspect req package 1

P: show all package requirements of all bundles
A: felix:inspect req package

P: show all service requirements of a bundle having id 1
A: felix:inspect cap service 1

P: show all service requirements of all bundles
A: felix:inspect cap service

P: show all services exported by bundles with IDs 10, 11, 34
A: felix:inspect cap service 10 11 34

P: show session context
A: gogo:set

P: set a variable into session context
A: variable = value

P: get value of the variable set in the session context
A: $variable

P: print the variable set in the session context
A: echo $variable

P: Match input using regular expression (grep)
A: echo test | grep '[tT]est'

P: Read the content of a resource from path, for example, a/b/c.txt
A: cat a/b/c.txt

P: Collect contents of a/b/c.txt into onle line
A: cat a/b/c.txt | tac

P: Collect contents of a/b/c.txt into a variable, named 'my_var'
A: my_var = (cat a/b/c.txt | tac)

P: Print Hello World
A: echo Hello World

P: Show history
A: history

P: Execute the 1st command from the history
A: !1

P: Execute the 5th command from the history
A: !5

P: Execute the command from the history that starts with x
A: !x

P: Show the current time in milliseconds (millis)
A: currenttimemillis

P: Show the system property named my_property 
A: property my_property

P: Show the user directory system property
A: property user.dir

P: Show the java home system property
A: property java.home

P: Show the java version system property
A: property java.version

P: Show the operating system (os) name system property
A: property os.name

P: Set the property A.B to value my_value
A: property A.B my_value

P: Set property prop to value val
A: property prop val

P: Change property xyz to mmm
A: property xyz mmm

P: Update property abc to def
A: property abc def

P: Show the nano time
A: nanotime

P: Display current time millis
A: currentTimeMillis

P: Show line separator
A: lineSeparator

P: Generate identity hashcode of string abc
A: identityhashcode abc

P: Generate identity hashcode of ammiiittt
A: identityhashcode ammiiittt

P: List all environment variables
A: env

P: Show or get the environment variable JAVA_HOME
A: env JAVA_HOME

P: Perform garbage collection
A: gc

P: Perform gc
A: gc

P: List all the components
A: scr:list

P: List all the components of bundle with id 57
A: scr:list 57

P: List all the components of bundle id 91
A: scr:list 91

P: Show the components that contain the string abc
A: scr:list | grep -A 1 abc

P: Show the components that contain the string ttsstt in their names
A: scr:list | grep -A 1 ttsstt

P: Show the info of the component having id 10
A: scr:info 10

P: Show the component info having name abc
A: scr:info abc

P: Enable the component with name abc
A: scr:enable abc

P: Enable the component with name com.amit.comp
A: scr:enable com.amit.comp

P: Enable the component de.abc.co
A: scr:enable de.abc.co

P: Disable the component with name abc
A: scr:disable abc

P: Disable the component a2b2.c3d4
A: scr:disable a2b2.c3d4

P: Disable the component dummy.comp
A: scr:disable dummy.comp

P: Show the SCR configuration
A: scr:config

P: Show the headers of bundle with id 4
A: bundle = bundle 4 | $bundle headers

P: Show the bundle name of bundle with id 4
A: bundle = bundle 4 | $bundle tostring

P: Show the bundle context of bundle with id 4
A: bundle = bundle 4 | $bundle bundlecontext

P: Show the symbolic name of bundle with id 10
A: bundle = bundle 10 | $bundle symbolicname

P: Show the location of bundle with id 12
A: bundle = bundle 12 | $bundle location

P: Show the registered services of bundle id 15
A: bundle = bundle 15 | $bundle registeredservices

P: Show the used services of bundle id 15
A: bundle = bundle 15 | $bundle servicesinuse

P: Show the version of bundle id 16
A: bundle = bundle 16 | $bundle version

P: Show the revisions of bundle id 17
A: bundle = bundle 16 | $bundle revisions

P: Load a class - a.b.c by the bundle id 4
A: bundle = bundle 4 | $bundle loadclass a.b.c

P: List all configurations (ConfigAdmin configurations)
A: cm:listconfigurations "(service.pid=*)"

P: List the configurations that have PID set to abc
A: cm:listconfigurations "(service.pid=abc)"

P: List the configurations whose PID contains xyz
A: cm:listconfigurations "(service.pid=*xyz*)"

P: List the configurations whose PID begins with mno
A: cm:listconfigurations "(service.pid=mno*)"

P: List the configurations whose PID ends with uvw
A: cm:listconfigurations "(service.pid=*uvw)"

P: List all configurations (ConfigAdmin configurations)
A: cm:listconfigurations null

P: List the configurations whose factory PID is wxy
A: cm:listconfigurations "(service.factoryPid=wxy)"

P: List the configurations whose factory PID contains jkl
A: cm:listconfigurations "(service.factoryPid=*jkl*)"

P: List the configurations whose factory PID begins with cde
A: cm:listconfigurations "(service.factoryPid=cde*)"

P: List the configurations whose location ends with aaa
A: cm:listconfigurations "(service.bundleLocation=*aaa)"

P: List the configurations whose location is bbb
A: cm:listconfigurations "(service.bundleLocation=bbb)"

P: List the configurations whose location contains ccc
A: cm:listconfigurations "(service.bundleLocation=*ccc*)"

P: List the configurations whose location begins with ddd
A: cm:listconfigurations "(service.bundleLocation=ddd*)"

P: List the configurations whose flocation ends with zzz
A: cm:listconfigurations "(service.bundleLocation=*zzz)"

P: Get the first configuration from the list of configuration whose factory PID is wxy and assign it to variable c
A: c = (cm:listconfigurations "(service.factoryPid=wxy)") 0

P: Get the third element from the list of configurations whose PID contains xyz and assign it to variable c
A: c = (cm:listconfigurations "(service.pid=*xyz*)") 2

P: Get the 5th element from the list of configurations whose location is ? and assign it to variable c
A: c = (cm:listconfigurations "(service.bundleLocation=?)") 4

P: Show the properties of the fifth configuration whose PID contains tuv and assign it to variable c
A: c = ((cm:listconfigurations "(service.pid=*tuv*)") 4) properties

P: Show the bundle location of the first configuration whose PID contains mno and assign it to variable l
A: l = (((cm:listconfigurations "(service.pid=*mno*)") 0) properties) BundleLocation

P: Show the change count of the third configuration whose PID contains xyz and assign it to variable l
A: l = (((cm:listconfigurations "(service.pid=*mno*)") 2) properties) ChangeCount

P: Show the PID of the 6th configuration whose PID stats with xyz and assign it to variable l
A: l = (((cm:listconfigurations "(service.pid=xyz*)") 5) properties) Pid

P: Show the factory PID of the 4th configuration whose PID ends with xyz and assign it to variable l
A: l = (((cm:listconfigurations "(service.pid=*xyz)") 3) properties) FactoryPid

P: Get the configuration with PID foo
A: cm:getconfiguration "foo"

P: Show the bundle location of the confiiguration PID bar and config is visible to all
A: (cm:getconfiguration "foo" "?") BundleLocation

P: Show the change count of the configuration PID foo.bar and config is visible to all
A: (cm:getconfiguration "foo.bar" "?") ChangeCount

P: Show the factory PID of the configuration PID foo.bar and config is visible to all
A: (cm:getconfiguration "foo.bar" "?") FactoryPid

P: Show the properties of the config PID foo.bar and config is visible to all
A: (cm:getconfiguration "foo.bar" "?") Properties

P: Create a dictionary and assign it to variable d
A: d = (((bundle 0) loadclass java.util.Hashtable) newInstance)

P: Add foo key to the dictionary d and associate bar value to the key
A: $d put "foo" "bar"

P: Create a configuration abc.xyz and assign it to variable c
A: c = cm:getconfiguration "abc.xyz"

P: Update the configuration c with the dictionary d
A: $c update $d

P: Create a factory PID abc.xyz and assign it to variable f
A: f = cm:createfactoryconfiguration "foo.biz" "?"

P: Create a factory configuration under factory PID abc and PID xyz and assign it to variable f
A: f = cm:getfactoryconfiguration "abc" "xyz" "?"

P: Change prompt to $ sign
A: prompt = "$ "

P: Change prompt to & sign
A: prompt = "& "

P: Lists information about why the specified bundle with ID 100 is not working (e.g., unresolved dependencies, etc.)
A: diag 100

P: Lists all of the services that have been registered
A: services

P: Show the headers of bundle having ID 20
A: felix:headers 20

P: Show the headers of bundles having IDs 35 40 55
A: felix:headers 35 40 55

P: Display all INFO log entries
A: felix:log info

P: Display all debug log entries
A: felix:log debug

P: Display all debug log entries
A: felix:log debug

P: Display all warn log entries
A: felix:log warn

P: Display all error log entries
A: felix:log error

P: Display max of 20 error log entries
A: felix:log 20 error

P: Display only 15 info log entries
A: felix:log 15 info

P: Display maximum 58 debug logs
A: felix:log 58 debug

P: Check if abc.def class is loaded by bundle id 40
A: felix:which 40 abc.def

P: Check if com.gateway.metrics.impl.Clock class is loaded by bundle id 76
A: felix:which 76 com.gateway.metrics.impl.Clock

P: Show the SCR configuration
A: scr:config

P: Show the generic SCR configuration
A: scr:config

P: Add a command named my-command that accepts an array containing 4, 6, 8, 10
A: addcommand my-command [4 6 8 10]

P: Add a command named math containing all functions available in Math class
A: addcommand math ((bundle 0) loadclass java.lang.Math) 